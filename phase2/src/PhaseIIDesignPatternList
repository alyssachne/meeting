************************************************************************************************************************
*                                                Design Patterns List                                                  *
************************************************************************************************************************
1. Strategy: We implemented the event sorting system with Strategy design pattern. There are different algorithms for
sorting the events in users' event list. e.g. by id, by name of speaker, by time. We made an interface called Sorter
Strategy with one method sort. All the other classes that represent the concrete algorithm of sorting implements
this interface.
2. Facade: We have one facade class called ControllerFacade, we aggregates all the controller methods in this facade
class. The concrete realization of the methods are put elsewhere.
3. Observer: We have the message system implementing this strategy.
4.Factory: Used for use cases for different type of users. Since we have many types of users and some of them share
same methods, using factory design pattern eliminates copying same codes. And when we call some methods, we donâ€™t need
to specify which class does the user belongs to.
